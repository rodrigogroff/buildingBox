//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModel
{
	/// <summary>
	/// Database       : BuildingBox
	/// Data Source    : localhost
	/// Server Version : 9.6.1
	/// </summary>
	public partial class BuildingBoxDB : LinqToDB.Data.DataConnection
	{
		public ITable<BillDetail>                   BillDetails                   { get { return this.GetTable<BillDetail>(); } }
		public ITable<Ticket>                       Tickets                       { get { return this.GetTable<Ticket>(); } }
		public ITable<TicketMessage>                TicketMessages                { get { return this.GetTable<TicketMessage>(); } }
		public ITable<TicketWorkFlow>               TicketWorkFlows               { get { return this.GetTable<TicketWorkFlow>(); } }
		public ITable<User>                         Users                         { get { return this.GetTable<User>(); } }
		public ITable<UserContract>                 UserContracts                 { get { return this.GetTable<UserContract>(); } }
		public ITable<UserContractBill>             UserContractBills             { get { return this.GetTable<UserContractBill>(); } }
		public ITable<UserContractState>            UserContractStates            { get { return this.GetTable<UserContractState>(); } }
		public ITable<UserCustomization>            UserCustomizations            { get { return this.GetTable<UserCustomization>(); } }
		public ITable<UserCustomizationEstimateLog> UserCustomizationEstimateLogs { get { return this.GetTable<UserCustomizationEstimateLog>(); } }
		public ITable<UserCustomizationStateChange> UserCustomizationStateChanges { get { return this.GetTable<UserCustomizationStateChange>(); } }
		public ITable<UserMeeting>                  UserMeetings                  { get { return this.GetTable<UserMeeting>(); } }
		public ITable<UserMeetingPerson>            UserMeetingPeople             { get { return this.GetTable<UserMeetingPerson>(); } }
		public ITable<UserMeetingSchedule>          UserMeetingSchedules          { get { return this.GetTable<UserMeetingSchedule>(); } }

		public BuildingBoxDB()
		{
			InitDataContext();
		}

		public BuildingBoxDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="public", Name="BillDetail")]
	public partial class BillDetail
	{
		[PrimaryKey, Identity] public long   id                 { get; set; } // bigint
		[Column,     Nullable] public long?  fkUserContractBill { get; set; } // bigint
		[Column,     Nullable] public string stItem             { get; set; } // character varying(99)
		[Column,     Nullable] public long?  nuValue            { get; set; } // bigint
	}

	[Table(Schema="public", Name="Ticket")]
	public partial class Ticket
	{
		[PrimaryKey, Identity] public long      id            { get; set; } // bigint
		[Column,     Nullable] public long?     fkContract    { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtCreation    { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtLog         { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUserOpen    { get; set; } // bigint
		[Column,     Nullable] public long?     fkTicketState { get; set; } // bigint
		[Column,     Nullable] public string    stProtocol    { get; set; } // character varying(9)
		[Column,     Nullable] public string    stTitle       { get; set; } // character varying(200)
		[Column,     Nullable] public string    stDescription { get; set; } // character varying(2000)
	}

	[Table(Schema="public", Name="TicketMessage")]
	public partial class TicketMessage
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkTicket  { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stMessage { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="TicketWorkFlow")]
	public partial class TicketWorkFlow
	{
		[PrimaryKey, Identity] public long      id         { get; set; } // bigint
		[Column,     Nullable] public long?     fkTicket   { get; set; } // bigint
		[Column,     Nullable] public long?     fkOldState { get; set; } // bigint
		[Column,     Nullable] public long?     fkNewState { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser     { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stMessage  { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="User")]
	public partial class User
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtCreation     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stClientName   { get; set; } // character varying(99)
		[Column,     Nullable] public long?     fkClientType   { get; set; } // bigint
		[Column,     Nullable] public long?     fkCountry      { get; set; } // bigint
		[Column,     Nullable] public string    stCityName     { get; set; } // character varying(200)
		[Column,     Nullable] public long?     fkDesiredGMT   { get; set; } // bigint
		[Column,     Nullable] public string    stPassword     { get; set; } // character varying(20)
		[Column,     Nullable] public string    stContactEmail { get; set; } // character varying(200)
	}

	[Table(Schema="public", Name="UserContract")]
	public partial class UserContract
	{
		[PrimaryKey, Identity] public long      id              { get; set; } // bigint
		[Column,     Nullable] public long?     fkContractState { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtCreation      { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stProtocol      { get; set; } // character varying(200)
		[Column,     Nullable] public string    stDNS           { get; set; } // character varying(200)
		[Column,     Nullable] public long?     fkUser          { get; set; } // bigint
		[Column,     Nullable] public long?     fkContractType  { get; set; } // bigint
		[Column,     Nullable] public long?     fkGMT           { get; set; } // bigint
		[Column,     Nullable] public long?     fkContinent     { get; set; } // bigint
		[Column,     Nullable] public long?     fkCountry       { get; set; } // bigint
		[Column,     Nullable] public long?     fkCity          { get; set; } // bigint
		[Column,     Nullable] public long?     nuBillingDay    { get; set; } // bigint
		[Column,     Nullable] public long?     nuContractValue { get; set; } // bigint
	}

	[Table(Schema="public", Name="UserContractBill")]
	public partial class UserContractBill
	{
		[PrimaryKey, Identity] public long      id             { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog          { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser         { get; set; } // bigint
		[Column,     Nullable] public long?     fkUserContract { get; set; } // bigint
		[Column,     Nullable] public long?     nuYear         { get; set; } // bigint
		[Column,     Nullable] public long?     nuMonth        { get; set; } // bigint
		[Column,     Nullable] public bool?     bPending       { get; set; } // boolean
		[Column,     Nullable] public bool?     bCancelled     { get; set; } // boolean
		[Column,     Nullable] public string    stBillId       { get; set; } // character varying(12)
		[Column,     Nullable] public DateTime? dtPayment      { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="UserContractState")]
	public partial class UserContractState
	{
		[PrimaryKey, Identity] public long      id              { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser          { get; set; } // bigint
		[Column,     Nullable] public long?     fkContract      { get; set; } // bigint
		[Column,     Nullable] public long?     fkContractState { get; set; } // bigint
	}

	[Table(Schema="public", Name="UserCustomization")]
	public partial class UserCustomization
	{
		[PrimaryKey, Identity] public long      id                   { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtCreation           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public DateTime? dtUpdate             { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser               { get; set; } // bigint
		[Column,     Nullable] public long?     fkContract           { get; set; } // bigint
		[Column,     Nullable] public long?     fkCustomizationState { get; set; } // bigint
		[Column,     Nullable] public string    stProtocol           { get; set; } // character varying(20)
		[Column,     Nullable] public string    stVersion            { get; set; } // character varying(20)
		[Column,     Nullable] public string    stObjective          { get; set; } // character varying(200)
		[Column,     Nullable] public long?     nuEstimateHours      { get; set; } // bigint
		[Column,     Nullable] public long?     nuEstimateMinutes    { get; set; } // bigint
		[Column,     Nullable] public bool?     bEstimativeApproval  { get; set; } // boolean
		[Column,     Nullable] public DateTime? dtEstimativeApproval { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public bool?     bFinalApproval       { get; set; } // boolean
		[Column,     Nullable] public DateTime? dtFinalApproval      { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="UserCustomizationEstimateLog")]
	public partial class UserCustomizationEstimateLog
	{
		[PrimaryKey, Identity] public long      id              { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkCustomization { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser          { get; set; } // bigint
		[Column,     Nullable] public long?     nuHours         { get; set; } // bigint
		[Column,     Nullable] public long?     nuMinutes       { get; set; } // bigint
	}

	[Table(Schema="public", Name="UserCustomizationStateChange")]
	public partial class UserCustomizationStateChange
	{
		[PrimaryKey, Identity] public long      id              { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog           { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public long?     fkUser          { get; set; } // bigint
		[Column,     Nullable] public long?     fkCustomization { get; set; } // bigint
		[Column,     Nullable] public long?     fkState         { get; set; } // bigint
	}

	[Table(Schema="public", Name="UserMeeting")]
	public partial class UserMeeting
	{
		[PrimaryKey, Identity] public long   id                  { get; set; } // bigint
		[Column,     Nullable] public long?  fkUser              { get; set; } // bigint
		[Column,     Nullable] public long?  nuDay               { get; set; } // bigint
		[Column,     Nullable] public long?  fkMonth             { get; set; } // bigint
		[Column,     Nullable] public long?  nuYear              { get; set; } // bigint
		[Column,     Nullable] public long?  nuHour              { get; set; } // bigint
		[Column,     Nullable] public long?  nuMinute            { get; set; } // bigint
		[Column,     Nullable] public long?  fkGMT               { get; set; } // bigint
		[Column,     Nullable] public long?  fkMeetingState      { get; set; } // bigint
		[Column,     Nullable] public long?  fkMeetingPlace      { get; set; } // bigint
		[Column,     Nullable] public string stMeetingMotivation { get; set; } // character varying(999)
		[Column,     Nullable] public string stMeetingDetails    { get; set; } // character varying(999)
	}

	[Table(Schema="public", Name="UserMeetingPerson")]
	public partial class UserMeetingPerson
	{
		[PrimaryKey, Identity] public long   id         { get; set; } // bigint
		[Column,     Nullable] public long?  fkMeeting  { get; set; } // bigint
		[Column,     Nullable] public string stName     { get; set; } // character varying(999)
		[Column,     Nullable] public string stRole     { get; set; } // character varying(999)
		[Column,     Nullable] public bool?  bConfirmed { get; set; } // boolean
	}

	[Table(Schema="public", Name="UserMeetingSchedule")]
	public partial class UserMeetingSchedule
	{
		[PrimaryKey, Identity] public long      id        { get; set; } // bigint
		[Column,     Nullable] public long?     fkMeeting { get; set; } // bigint
		[Column,     Nullable] public long?     fkUser    { get; set; } // bigint
		[Column,     Nullable] public long?     fkState   { get; set; } // bigint
		[Column,     Nullable] public DateTime? dtLog     { get; set; } // timestamp (6) without time zone
		[Column,     Nullable] public string    stDate    { get; set; } // character varying(200)
	}

	public static partial class TableExtensions
	{
		public static BillDetail Find(this ITable<BillDetail> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static Ticket Find(this ITable<Ticket> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TicketMessage Find(this ITable<TicketMessage> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static TicketWorkFlow Find(this ITable<TicketWorkFlow> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static User Find(this ITable<User> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserContract Find(this ITable<UserContract> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserContractBill Find(this ITable<UserContractBill> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserContractState Find(this ITable<UserContractState> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserCustomization Find(this ITable<UserCustomization> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserCustomizationEstimateLog Find(this ITable<UserCustomizationEstimateLog> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserCustomizationStateChange Find(this ITable<UserCustomizationStateChange> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserMeeting Find(this ITable<UserMeeting> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserMeetingPerson Find(this ITable<UserMeetingPerson> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static UserMeetingSchedule Find(this ITable<UserMeetingSchedule> table, long id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}
	}
}
